@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity

@inject IAuthorizationService authorizationService

<div class="row">
    <div class="col-sm-12">     
           @if(Model.TaskViewModel.Count == 0)
                {
                <p class="h4 text-center">No results found</p>
            }
            else
            {
        <table id="example2" class="table table-bordered table-hover dataTable dtr-inline" aria-describedby="example2_info">                                  
            <thead>
                <tr>
                    <th class="col">Note</th>
                    <th class="col">Due Date</th>
                    <th class="col">Is Important</th>
            </thead>
            <tbody>                  
                @foreach (var task in Model.TaskViewModel)
                {
                    <tr class="odd">
                        <td class="dtr-control sorting_1" tabindex="0" style="width: 60%">
                            <div>
                                @task.Note
                            </div>
                            @if ((await authorizationService.AuthorizeAsync(User, "StepsUserRolePolicy")).Succeeded)
                            {
                                <div>
                                    <small>
                                        <em>
                                            @task.Steps.Count steps
                                        </em>
                                    </small>
                                </div>

                            }
                            @if ((await authorizationService.AuthorizeAsync(User, "StatementsUserRolePolicy")).Succeeded)
                            {
                                <div>
                                    <small>
                                        <em>
                                            @task.Statements.Count statements
                                        </em>
                                    </small>
                                </div>                                
                            }

                        </td>
                        <td class="dtr-control sorting_1" tabindex="0" style="width: 15%">@task.DueDate.ToShortDateString()</td>
                        <td class="dtr-control sorting_1" tabindex="1" style="width: 25%">
                            <div class="nav-item d-none d-sm-inline-block" style="display: inline-flex!important">
                                @if (task.IsImportant == true)
                                {
                                    <i class="fas fa-exclamation" style="padding: 1rem"></i>
                                }
                                else
                                {
                                    <i class="col-2" style="padding: 1rem"></i>
                                }
                                <a asp-action="Details" asp-route-Id="@task.Id" asp-controller="Task" class="nav-link">
                                    Task Details
                                    <i class="fas fa-arrow-up-right-from-square"></i>
                                </a>
                            </div>
                        </td>

                    </tr>
                }
            </tbody>
        </table>
        }
    </div>
</div>
